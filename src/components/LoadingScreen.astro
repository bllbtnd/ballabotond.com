---
// Elegant loading screen component matching the luxury design
---

<div id="loading-screen" class="fixed inset-0 z-[9999] flex items-center justify-center" style="background-color: #010103;">

  <!-- Subtle background tint -->
  <div class="absolute inset-0 opacity-10" style="background-color: rgba(201, 169, 107, 0.05);"></div>
  
  <!-- Loading content -->
  <div class="relative z-10 flex flex-col items-center justify-center">
    
    <!-- Brand Monogram -->
    <div class="flex items-center justify-center mb-12">
      <span class="font-playfair text-6xl md:text-7xl font-light text-luxury-gold drop-shadow-2xl animate-fade-in-slow">B</span>
      <div class="mx-6 flex flex-col items-center">
        <div class="w-px h-12 bg-luxury-gold opacity-60 animate-pulse-gentle"></div>
      </div>
      <span class="font-playfair text-6xl md:text-7xl font-light text-luxury-gold drop-shadow-2xl animate-fade-in-slow">B</span>
    </div>
    
    <!-- Single elegant loading element -->
    <div class="relative w-16 h-16">
      <!-- Outer ring -->
      <div class="absolute inset-0 rounded-full border-2 border-luxury-gold border-opacity-20"></div>
      <!-- Spinning arc -->
      <div class="absolute inset-0 rounded-full border-2 border-transparent border-t-luxury-gold animate-spin-slow"></div>
    </div>
    
  </div>
</div>

<style>
  /* Custom loading animations */
  @keyframes fadeInSlow {
    from { 
      opacity: 0; 
      transform: translateY(10px) scale(0.95); 
    }
    to { 
      opacity: 1; 
      transform: translateY(0) scale(1); 
    }
  }
  
  @keyframes spinSlow {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
  
  @keyframes pulseGentle {
    0%, 100% { 
      opacity: 0.6; 
    }
    50% { 
      opacity: 1; 
    }
  }
  
  @keyframes fadeOut {
    from { 
      opacity: 1; 
      transform: scale(1); 
    }
    to { 
      opacity: 0; 
      transform: scale(1.05); 
    }
  }
  
  /* Apply animations */
  .animate-fade-in-slow {
    animation: fadeInSlow 1.2s ease-out forwards;
  }
  
  .animate-spin-slow {
    animation: spinSlow 2s linear infinite;
  }
  
  .animate-pulse-gentle {
    animation: pulseGentle 2s ease-in-out infinite;
  }
  
  .animate-fade-out {
    animation: fadeOut 0.8s ease-in-out forwards;
  }
</style>

<script>
  // Loading screen management
  class LoadingManager {
    private loadingScreen: HTMLElement | null;
    private isLoading: boolean = true;
    private minimumLoadTime: number = 1500; // Minimum 1.5 seconds for elegance
    private startTime: number;
    
    constructor() {
      this.loadingScreen = document.getElementById('loading-screen');
      this.startTime = Date.now();
      this.init();
    }
    
    private init(): void {
      // Hide loading screen when page is fully loaded
      if (document.readyState === 'complete') {
        this.hideLoadingScreen();
      } else {
        window.addEventListener('load', () => this.hideLoadingScreen());
      }
      
      // Also hide on DOM content loaded, but with a minimum time
      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', () => this.hideLoadingScreen());
      }
    }
    
    private hideLoadingScreen(): void {
      if (!this.isLoading || !this.loadingScreen) return;
      
      const elapsed = Date.now() - this.startTime;
      const remainingTime = Math.max(0, this.minimumLoadTime - elapsed);
      
      setTimeout(() => {
        if (this.loadingScreen) {
          this.loadingScreen.classList.add('animate-fade-out');
          
          // Remove loading class from body
          document.body.classList.remove('loading');
          
          // Remove from DOM after animation
          setTimeout(() => {
            if (this.loadingScreen) {
              this.loadingScreen.remove();
            }
          }, 800);
        }
        this.isLoading = false;
      }, remainingTime);
    }
    
    // Public method to force hide (useful for debugging)
    public forceHide(): void {
      this.isLoading = false;
      document.body.classList.remove('loading');
      this.hideLoadingScreen();
    }
  }
  
  // Initialize loading manager
  new LoadingManager();
  
  // Expose to global scope for debugging
  (window as any).loadingManager = LoadingManager;
</script>
