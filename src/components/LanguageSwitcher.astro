---
import { languages } from '../i18n/ui';
import { getLangFromUrl } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const currentPath = Astro.url.pathname;

// Remove language prefix to get the base path
let basePath = currentPath;
// Remove the language prefix if it exists (e.g., /hu/resume -> /resume)
basePath = basePath.replace(/^\/[a-z]{2}(?=\/|$)/, '') || '/';

// Function to get the correct path for each language
function getLocalizedPath(locale: string) {
  if (locale === 'en') {
    return basePath;
  }
  return `/${locale}${basePath}`;
}
---

<div class="language-switcher relative z-50">
  <button 
    id="language-button"
    class="group flex items-center gap-2 px-4 py-2 rounded-full bg-gray-900 bg-opacity-80 backdrop-blur-sm border border-luxury-gold hover:bg-luxury-gold hover:border-luxury-gold text-luxury-gold hover:text-gray-900 transition-all duration-300 shadow-lg hover:shadow-xl"
    aria-label="Select Language"
  >
    <i class="fas fa-globe text-sm group-hover:scale-110 transition-transform duration-300"></i>
    <span class="font-montserrat font-medium text-sm uppercase tracking-wider">
      {languages[lang]}
    </span>
    <i class="fas fa-chevron-down text-xs group-hover:rotate-180 transition-transform duration-300"></i>
  </button>
  
  <div 
    id="language-dropdown"
    class="absolute top-full right-0 mt-2 bg-gray-900 bg-opacity-95 backdrop-blur-sm border border-gray-700 rounded-xl shadow-2xl overflow-hidden opacity-0 invisible transform translate-y-2 transition-all duration-300"
  >
    {Object.entries(languages).map(([locale, name]) => (
      <a 
        href={getLocalizedPath(locale)}
        class={`flex items-center gap-3 px-6 py-3 text-sm font-montserrat transition-all duration-200 ${
          locale === lang 
            ? 'bg-luxury-gold text-gray-900 font-semibold' 
            : 'text-luxury-gray hover:bg-gray-800 hover:text-luxury-gold'
        }`}
        data-locale={locale}
      >
        <span class="w-6 h-4 rounded-sm overflow-hidden flex-shrink-0 border border-gray-600">
          <img 
            src={`/flags/${locale}.svg`} 
            alt={`${name} flag`}
            class="w-full h-full object-cover"
            loading="lazy"
            onerror="this.style.display='none'"
          />
        </span>
        <span class="uppercase tracking-wider">{name}</span>
        {locale === lang && (
          <i class="fas fa-check text-xs ml-auto"></i>
        )}
      </a>
    ))}
  </div>
</div>

<style>
.language-switcher-open #language-dropdown {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const button = document.getElementById('language-button');
  const dropdown = document.getElementById('language-dropdown');
  const switcher = document.querySelector('.language-switcher');

  if (button && dropdown && switcher) {
    button.addEventListener('click', (e) => {
      e.stopPropagation();
      switcher.classList.toggle('language-switcher-open');
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', () => {
      switcher.classList.remove('language-switcher-open');
    });

    // Prevent dropdown from closing when clicking inside it
    dropdown.addEventListener('click', (e) => {
      e.stopPropagation();
    });

    // Auto-detect and redirect based on browser language
    const detectAndRedirect = () => {
      const browserLang = navigator.language.split('-')[0];
      const supportedLangs = ['en', 'hu', 'it'];
      const currentLang = window.location.pathname.split('/')[1];
      
      // Only redirect if we're on the default language page and browser has a different supported language
      if (!supportedLangs.includes(currentLang) && supportedLangs.includes(browserLang) && browserLang !== 'en') {
        const currentPath = window.location.pathname;
        const newPath = `/${browserLang}${currentPath}`;
        
        // Only redirect if we haven't already redirected (check sessionStorage)
        if (!sessionStorage.getItem('languageDetected')) {
          sessionStorage.setItem('languageDetected', 'true');
          if (confirm(`Would you like to view this page in ${browserLang === 'hu' ? 'Hungarian' : 'Italian'}?`)) {
            window.location.href = newPath;
          }
        }
      }
    };

    // Run auto-detection only on the first visit
    if (!sessionStorage.getItem('languageDetected')) {
      setTimeout(detectAndRedirect, 1000);
    }
  }
});
</script>
